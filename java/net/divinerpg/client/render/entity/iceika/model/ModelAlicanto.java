package net.divinerpg.client.render.entity.iceika.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class ModelAlicanto extends ModelBase
{
    //fields
    ModelRenderer head;
    ModelRenderer body;
    ModelRenderer wing1;
    ModelRenderer wing1slide1;
    ModelRenderer spikebottom1;
    ModelRenderer spike2;
    ModelRenderer spike3;
    ModelRenderer spike4;
    ModelRenderer spike5;
    ModelRenderer spikebottom2;
    ModelRenderer headext1;
    ModelRenderer tail;
    ModelRenderer horngate1;
    ModelRenderer hornbottom1;
    ModelRenderer hornend;
    ModelRenderer horngate2;
    ModelRenderer horn;
    ModelRenderer hornbottom2;
    ModelRenderer hornbtm1;
    ModelRenderer hornbtm2;
    ModelRenderer headjoint;
    ModelRenderer headcap1;
    ModelRenderer headext2;
    ModelRenderer headcap2;
    ModelRenderer spikebottom3;
    ModelRenderer spike15;
    ModelRenderer spike14;
    ModelRenderer spike1;
    ModelRenderer spike6;
    ModelRenderer spike7;
    ModelRenderer wing2;
    ModelRenderer wing1slide2;
    ModelRenderer wing1slide3;
    ModelRenderer wing2slide2;
    ModelRenderer wing2slide1;
    ModelRenderer wing2slide3;

    public ModelAlicanto()
    {
        textureWidth = 64;
        textureHeight = 32;

        head = new ModelRenderer(this, 0, 0);
        head.addBox(-4F, -4F, -6F, 8, 8, 12);
        head.setRotationPoint(0F, 6F, -10F);
        head.setTextureSize(64, 32);
        head.mirror = true;
        setRotation(head, 0F, 0F, 0F);
        body = new ModelRenderer(this, 19, 0);
        body.addBox(-6F, -10F, -7F, 12, 22, 10);
        body.setRotationPoint(0F, 11F, 2F);
        body.setTextureSize(64, 32);
        body.mirror = true;
        setRotation(body, 0.8644027F, 0F, 0F);
        wing1 = new ModelRenderer(this, 0, 0);
        wing1.addBox(-14F, 0F, -5F, 20, 1, 10);
        wing1.setRotationPoint(-11F, 12F, 0F);
        wing1.setTextureSize(64, 32);
        wing1.mirror = true;
        setRotation(wing1, -0.7330383F, 0F, 0F);
        wing1slide1 = new ModelRenderer(this, 26, 4);
        wing1slide1.addBox(-12F, -1F, -6F, 2, 3, 12);
        wing1slide1.setRotationPoint(-5F, 12F, 0F);
        wing1slide1.setTextureSize(64, 32);
        wing1slide1.mirror = true;
        setRotation(wing1slide1, -0.7330383F, 0F, 0F);
        spikebottom1 = new ModelRenderer(this, 13, 21);
        spikebottom1.addBox(0F, 0F, 0F, 2, 10, 2);
        spikebottom1.setRotationPoint(3F, 7F, 13F);
        spikebottom1.setTextureSize(64, 32);
        spikebottom1.mirror = true;
        setRotation(spikebottom1, -0.2602503F, 0F, 0F);
        spike2 = new ModelRenderer(this, 13, 21);
        spike2.addBox(0F, 0F, 0F, 2, 10, 1);
        spike2.setRotationPoint(3F, -4F, 0F);
        spike2.setTextureSize(64, 32);
        spike2.mirror = true;
        setRotation(spike2, -0.2602503F, 0F, 0F);
        spike3 = new ModelRenderer(this, 13, 21);
        spike3.addBox(0F, 0F, 0F, 2, 10, 1);
        spike3.setRotationPoint(3F, -1F, 5F);
        spike3.setTextureSize(64, 32);
        spike3.mirror = true;
        setRotation(spike3, -0.2602503F, 0F, 0F);
        spike4 = new ModelRenderer(this, 40, 15);
        spike4.addBox(0F, -3F, 0F, 2, 13, 1);
        spike4.setRotationPoint(-1F, -4F, 0F);
        spike4.setTextureSize(64, 32);
        spike4.mirror = true;
        setRotation(spike4, -0.2602503F, 0F, 0F);
        spike5 = new ModelRenderer(this, 40, 15);
        spike5.addBox(0F, -3F, 0F, 2, 13, 1);
        spike5.setRotationPoint(-1F, -1F, 5F);
        spike5.setTextureSize(64, 32);
        spike5.mirror = true;
        setRotation(spike5, -0.2602503F, 0F, 0F);
        spikebottom2 = new ModelRenderer(this, 40, 15);
        spikebottom2.addBox(0F, -3F, 0F, 2, 13, 2);
        spikebottom2.setRotationPoint(-1F, 7F, 13F);
        spikebottom2.setTextureSize(64, 32);
        spikebottom2.mirror = true;
        setRotation(spikebottom2, -0.2602503F, 0F, 0F);
        headext1 = new ModelRenderer(this, 23, 14);
        headext1.addBox(0F, 0F, -1F, 2, 2, 2);
        headext1.setRotationPoint(-6F, 4F, -10F);
        headext1.setTextureSize(64, 32);
        headext1.mirror = true;
        setRotation(headext1, 0F, 0F, 0F);
        tail = new ModelRenderer(this, 23, 14);
        tail.addBox(0F, 0F, 0F, 2, 4, 14);
        tail.setRotationPoint(-1F, 18F, 8F);
        tail.setTextureSize(64, 32);
        tail.mirror = true;
        setRotation(tail, 0F, 0F, 0F);
        horngate1 = new ModelRenderer(this, 23, 14);
        horngate1.addBox(0F, 0F, 0F, 4, 6, 2);
        horngate1.setRotationPoint(-2F, -6F, -15F);
        horngate1.setTextureSize(64, 32);
        horngate1.mirror = true;
        setRotation(horngate1, 0F, 0F, 0F);
        hornbottom1 = new ModelRenderer(this, 23, 14);
        hornbottom1.addBox(-15F, 0F, -1F, 4, 4, 4);
        hornbottom1.setRotationPoint(6F, 11F, -21F);
        hornbottom1.setTextureSize(64, 32);
        hornbottom1.mirror = true;
        setRotation(hornbottom1, 0.6108652F, 0F, 0F);
        hornend = new ModelRenderer(this, 23, 14);
        hornend.addBox(0F, 0F, 0F, 4, 6, 5);
        hornend.setRotationPoint(-2F, -6F, -24F);
        hornend.setTextureSize(64, 32);
        hornend.mirror = true;
        setRotation(hornend, 0F, 0F, 0F);
        horngate2 = new ModelRenderer(this, 23, 14);
        horngate2.addBox(0F, 0F, 0F, 4, 6, 2);
        horngate2.setRotationPoint(-2F, -6F, -18F);
        horngate2.setTextureSize(64, 32);
        horngate2.mirror = true;
        setRotation(horngate2, 0F, 0F, 0F);
        horn = new ModelRenderer(this, 23, 14);
        horn.addBox(0F, 0F, 0F, 2, 4, 14);
        horn.setRotationPoint(-1F, -5F, -23F);
        horn.setTextureSize(64, 32);
        horn.mirror = true;
        setRotation(horn, 0F, 0F, 0F);
        hornbottom2 = new ModelRenderer(this, 23, 14);
        hornbottom2.addBox(-1F, 0F, -1F, 4, 4, 4);
        hornbottom2.setRotationPoint(6F, 11F, -21F);
        hornbottom2.setTextureSize(64, 32);
        hornbottom2.mirror = true;
        setRotation(hornbottom2, 0.6108652F, 0F, 0F);
        hornbtm1 = new ModelRenderer(this, 23, 14);
        hornbtm1.addBox(-14F, 0F, 2F, 2, 2, 12);
        hornbtm1.setRotationPoint(6F, 12F, -21F);
        hornbtm1.setTextureSize(64, 32);
        hornbtm1.mirror = true;
        setRotation(hornbtm1, 0.6108652F, 0F, 0F);
        hornbtm2 = new ModelRenderer(this, 23, 14);
        hornbtm2.addBox(0F, 0F, 2F, 2, 2, 12);
        hornbtm2.setRotationPoint(6F, 12F, -21F);
        hornbtm2.setTextureSize(64, 32);
        hornbtm2.mirror = true;
        setRotation(hornbtm2, 0.6108652F, 0F, 0F);
        headjoint = new ModelRenderer(this, 23, 14);
        headjoint.addBox(0F, 0F, 0F, 2, 4, 4);
        headjoint.setRotationPoint(-1F, -1F, -13F);
        headjoint.setTextureSize(64, 32);
        headjoint.mirror = true;
        setRotation(headjoint, 0F, 0F, 0F);
        headcap1 = new ModelRenderer(this, 23, 14);
        headcap1.addBox(3F, 0F, -1F, 4, 4, 4);
        headcap1.setRotationPoint(-12F, 3F, -11F);
        headcap1.setTextureSize(64, 32);
        headcap1.mirror = true;
        setRotation(headcap1, 0F, 0F, 0F);
        headext2 = new ModelRenderer(this, 23, 14);
        headext2.addBox(0F, 0F, -1F, 2, 2, 2);
        headext2.setRotationPoint(4F, 4F, -10F);
        headext2.setTextureSize(64, 32);
        headext2.mirror = true;
        setRotation(headext2, 0F, 0F, 0F);
        headcap2 = new ModelRenderer(this, 23, 14);
        headcap2.addBox(3F, 0F, -1F, 4, 4, 4);
        headcap2.setRotationPoint(2F, 3F, -11F);
        headcap2.setTextureSize(64, 32);
        headcap2.mirror = true;
        setRotation(headcap2, 0F, 0F, 0F);
        spikebottom3 = new ModelRenderer(this, 13, 21);
        spikebottom3.addBox(0F, 0F, 0F, 2, 10, 2);
        spikebottom3.setRotationPoint(-5F, 7F, 13F);
        spikebottom3.setTextureSize(64, 32);
        spikebottom3.mirror = true;
        setRotation(spikebottom3, -0.2602503F, 0F, 0F);
        spike15 = new ModelRenderer(this, 13, 21);
        spike15.addBox(0F, 0F, 0F, 2, 10, 1);
        spike15.setRotationPoint(-5F, -1F, 5F);
        spike15.setTextureSize(64, 32);
        spike15.mirror = true;
        setRotation(spike15, -0.2602503F, 0F, 0F);
        spike14 = new ModelRenderer(this, 13, 21);
        spike14.addBox(0F, 0F, 0F, 2, 10, 1);
        spike14.setRotationPoint(-5F, -4F, 0F);
        spike14.setTextureSize(64, 32);
        spike14.mirror = true;
        setRotation(spike14, -0.2602503F, 0F, 0F);
        spike1 = new ModelRenderer(this, 13, 21);
        spike1.addBox(0F, 0F, 0F, 2, 10, 1);
        spike1.setRotationPoint(3F, 4F, 10F);
        spike1.setTextureSize(64, 32);
        spike1.mirror = true;
        setRotation(spike1, -0.2602503F, 0F, 0F);
        spike6 = new ModelRenderer(this, 40, 15);
        spike6.addBox(0F, -3F, 0F, 2, 13, 1);
        spike6.setRotationPoint(-1F, 4F, 10F);
        spike6.setTextureSize(64, 32);
        spike6.mirror = true;
        setRotation(spike6, -0.2602503F, 0F, 0F);
        spike7 = new ModelRenderer(this, 13, 21);
        spike7.addBox(0F, 0F, 0F, 2, 10, 1);
        spike7.setRotationPoint(-5F, 4F, 10F);
        spike7.setTextureSize(64, 32);
        spike7.mirror = true;
        setRotation(spike7, -0.2602503F, 0F, 0F);
        wing2 = new ModelRenderer(this, 0, 0);
        wing2.addBox(0F, 0F, -5F, 20, 1, 10);
        wing2.setRotationPoint(6F, 12F, 0F);
        wing2.setTextureSize(64, 32);
        wing2.mirror = true;
        setRotation(wing2, -0.7330383F, 0F, 0F);
        wing1slide2 = new ModelRenderer(this, 26, 4);
        wing1slide2.addBox(-22F, -1F, -6F, 2, 3, 12);
        wing1slide2.setRotationPoint(-5F, 12F, 0F);
        wing1slide2.setTextureSize(64, 32);
        wing1slide2.mirror = true;
        setRotation(wing1slide2, -0.7330383F, 0F, 0F);
        wing1slide3 = new ModelRenderer(this, 26, 4);
        wing1slide3.addBox(-2F, -1F, -6F, 2, 3, 12);
        wing1slide3.setRotationPoint(-5F, 12F, 0F);
        wing1slide3.setTextureSize(64, 32);
        wing1slide3.mirror = true;
        setRotation(wing1slide3, -0.7330383F, 0F, 0F);
        wing2slide2 = new ModelRenderer(this, 26, 4);
        wing2slide2.addBox(10F, -1F, -6F, 2, 3, 12);
        wing2slide2.setRotationPoint(6F, 12F, 0F);
        wing2slide2.setTextureSize(64, 32);
        wing2slide2.mirror = true;
        setRotation(wing2slide2, -0.7330383F, 0F, 0F);
        wing2slide1 = new ModelRenderer(this, 26, 4);
        wing2slide1.addBox(0F, -1F, -6F, 2, 3, 12);
        wing2slide1.setRotationPoint(6F, 12F, 0F);
        wing2slide1.setTextureSize(64, 32);
        wing2slide1.mirror = true;
        setRotation(wing2slide1, -0.7330383F, 0F, 0F);
        wing2slide3 = new ModelRenderer(this, 26, 4);
        wing2slide3.addBox(20F, -1F, -6F, 2, 3, 12);
        wing2slide3.setRotationPoint(6F, 12F, 0F);
        wing2slide3.setTextureSize(64, 32);
        wing2slide3.mirror = true;
        setRotation(wing2slide3, -0.7330383F, 0F, 0F);
    }

    @Override
    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
    {
        super.render(entity, f, f1, f2, f3, f4, f5);
        setRotationAngles(f, f1, f2, f3, f4, f5);
        head.render(f5);
        body.render(f5);
        wing1.render(f5);
        wing1slide1.render(f5);
        spikebottom1.render(f5);
        spike2.render(f5);
        spike3.render(f5);
        spike4.render(f5);
        spike5.render(f5);
        spikebottom2.render(f5);
        headext1.render(f5);
        tail.render(f5);
        horngate1.render(f5);
        hornbottom1.render(f5);
        hornend.render(f5);
        horngate2.render(f5);
        horn.render(f5);
        hornbottom2.render(f5);
        hornbtm1.render(f5);
        hornbtm2.render(f5);
        headjoint.render(f5);
        headcap1.render(f5);
        headext2.render(f5);
        headcap2.render(f5);
        spikebottom3.render(f5);
        spike15.render(f5);
        spike14.render(f5);
        spike1.render(f5);
        spike6.render(f5);
        spike7.render(f5);
        wing2.render(f5);
        wing1slide2.render(f5);
        wing1slide3.render(f5);
        wing2slide2.render(f5);
        wing2slide1.render(f5);
        wing2slide3.render(f5);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z)
    {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }

    public void setRotationAngles(float par2, float par3, float par4, float par5, float par6, float par7)
    {
        this.wing1slide1.rotateAngleY = MathHelper.cos(par4 * 1.3F) * (float)Math.PI * 0.25F;
        this.wing1slide2.rotateAngleY = MathHelper.cos(par4 * 1.3F) * (float)Math.PI * 0.25F;
        this.wing1slide3.rotateAngleY = MathHelper.cos(par4 * 1.3F) * (float)Math.PI * 0.25F;
        this.wing1.rotateAngleY = MathHelper.cos(par4 * 1.3F) * (float)Math.PI * 0.25F;
        this.wing2.rotateAngleY = -this.wing1.rotateAngleY;
        this.wing2slide1.rotateAngleY = -this.wing1.rotateAngleY;
        this.wing2slide2.rotateAngleY = -this.wing1.rotateAngleY;
        this.wing2slide3.rotateAngleY = -this.wing1.rotateAngleY;
    }

}
