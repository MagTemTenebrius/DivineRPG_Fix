package net.divinerpg.client.render.entity.twilight.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelEpiphite extends ModelBase {
    ModelRenderer leg1;
    ModelRenderer foot1;
    ModelRenderer leg2;
    ModelRenderer foot2;
    ModelRenderer foot3;
    ModelRenderer leg3;
    ModelRenderer leg4;
    ModelRenderer foot4;
    ModelRenderer body;
    ModelRenderer neck;
    ModelRenderer spike1;
    ModelRenderer spike2;
    ModelRenderer spike3;
    ModelRenderer spike4;
    ModelRenderer spike5;
    ModelRenderer spike6;
    ModelRenderer spike7;
    ModelRenderer spike8;
    ModelRenderer spike9;
    ModelRenderer spike10;
    ModelRenderer head;
    ModelRenderer spike11;
    ModelRenderer spike12;
    ModelRenderer spike13;
    ModelRenderer spike14;
    ModelRenderer spike15;
    ModelRenderer spike16;
    ModelRenderer spike17;
    ModelRenderer spike18;
    ModelRenderer tooth1;
    ModelRenderer tooth2;
    ModelRenderer tooth3;
    ModelRenderer tooth4;
    ModelRenderer spike19;
    ModelRenderer spike20;
    ModelRenderer spike21;
    ModelRenderer side1;
    ModelRenderer side2;
    ModelRenderer side3;
    ModelRenderer side4;
    ModelRenderer side5;
    ModelRenderer side6;
    ModelRenderer side7;
    ModelRenderer side8;
    ModelRenderer tail1;
    ModelRenderer tail2;
  
  public ModelEpiphite() {
    textureWidth = 64;
    textureHeight = 32;
    
      leg1 = new ModelRenderer(this, 8, 0);
      leg1.addBox(-1F, 0F, 0F, 2, 4, 1);
      leg1.setRotationPoint(2F, 20F, 5F);
      leg1.setTextureSize(64, 32);
      leg1.mirror = true;
      setRotation(leg1, 0F, 0F, 0F);
      foot1 = new ModelRenderer(this, 0, 0);
      foot1.addBox(-1F, 3F, -2F, 2, 1, 2);
      foot1.setRotationPoint(2F, 20F, 5F);
      foot1.setTextureSize(64, 32);
      foot1.mirror = true;
      setRotation(foot1, 0F, 0F, 0F);
      leg2 = new ModelRenderer(this, 8, 0);
      leg2.addBox(-1F, 0F, 0F, 2, 4, 1);
      leg2.setRotationPoint(-2F, 20F, 5F);
      leg2.setTextureSize(64, 32);
      leg2.mirror = true;
      setRotation(leg2, 0F, 0F, 0F);
      foot2 = new ModelRenderer(this, 0, 0);
      foot2.addBox(-1F, 3F, -2F, 2, 1, 2);
      foot2.setRotationPoint(-2F, 20F, 5F);
      foot2.setTextureSize(64, 32);
      foot2.mirror = true;
      setRotation(foot2, 0F, 0F, 0F);
      foot3 = new ModelRenderer(this, 0, 0);
      foot3.addBox(-1F, 3F, -2F, 2, 1, 2);
      foot3.setRotationPoint(-2F, 20F, -6F);
      foot3.setTextureSize(64, 32);
      foot3.mirror = true;
      setRotation(foot3, 0F, 0F, 0F);
      leg3 = new ModelRenderer(this, 8, 0);
      leg3.addBox(-1F, 0F, 0F, 2, 4, 1);
      leg3.setRotationPoint(-2F, 20F, -6F);
      leg3.setTextureSize(64, 32);
      leg3.mirror = true;
      setRotation(leg3, 0F, 0F, 0F);
      leg4 = new ModelRenderer(this, 8, 0);
      leg4.addBox(-1F, 0F, 0F, 2, 4, 1);
      leg4.setRotationPoint(2F, 20F, -6F);
      leg4.setTextureSize(64, 32);
      leg4.mirror = true;
      setRotation(leg4, 0F, 0F, 0F);
      foot4 = new ModelRenderer(this, 0, 0);
      foot4.addBox(-1F, 3F, -2F, 2, 1, 2);
      foot4.setRotationPoint(2F, 20F, -6F);
      foot4.setTextureSize(64, 32);
      foot4.mirror = true;
      setRotation(foot4, 0F, 0F, 0F);
      body = new ModelRenderer(this, 0, 12);
      body.addBox(0F, 0F, 0F, 8, 4, 16);
      body.setRotationPoint(-4F, 16F, -8F);
      body.setTextureSize(64, 32);
      body.mirror = true;
      setRotation(body, 0F, 0F, 0F);
      neck = new ModelRenderer(this, 32, 0);
      neck.addBox(-1F, -6F, -1F, 2, 6, 2);
      neck.setRotationPoint(0F, 17F, -7F);
      neck.setTextureSize(64, 32);
      neck.mirror = true;
      setRotation(neck, 0.4363323F, 0F, 0F);
      spike1 = new ModelRenderer(this, 60, 0);
      spike1.addBox(0F, -4F, 0F, 1, 4, 1);
      spike1.setRotationPoint(0.5F, 16F, -5F);
      spike1.setTextureSize(64, 32);
      spike1.mirror = true;
      setRotation(spike1, -0.8726646F, 0F, 0F);
      spike2 = new ModelRenderer(this, 60, 0);
      spike2.addBox(0F, -4F, 0F, 1, 4, 1);
      spike2.setRotationPoint(-0.5F, 16F, -3F);
      spike2.setTextureSize(64, 32);
      spike2.mirror = true;
      setRotation(spike2, -0.8726646F, 0F, 0F);
      spike3 = new ModelRenderer(this, 60, 0);
      spike3.addBox(0F, -4F, 0F, 1, 4, 1);
      spike3.setRotationPoint(-1.5F, 16F, -5F);
      spike3.setTextureSize(64, 32);
      spike3.mirror = true;
      setRotation(spike3, -0.8726646F, 0F, 0F);
      spike4 = new ModelRenderer(this, 60, 0);
      spike4.addBox(0F, -4F, 0F, 1, 4, 1);
      spike4.setRotationPoint(1.5F, 16F, -3F);
      spike4.setTextureSize(64, 32);
      spike4.mirror = true;
      setRotation(spike4, -0.8726646F, 0F, 0F);
      spike5 = new ModelRenderer(this, 60, 0);
      spike5.addBox(0F, -4F, 0F, 1, 4, 1);
      spike5.setRotationPoint(-2.5F, 16F, -3F);
      spike5.setTextureSize(64, 32);
      spike5.mirror = true;
      setRotation(spike5, -0.8726646F, 0F, 0F);
      spike6 = new ModelRenderer(this, 60, 0);
      spike6.addBox(0F, -4F, 0F, 1, 4, 1);
      spike6.setRotationPoint(0.5F, 16F, -1F);
      spike6.setTextureSize(64, 32);
      spike6.mirror = true;
      setRotation(spike6, -0.8726646F, 0F, 0F);
      spike7 = new ModelRenderer(this, 60, 0);
      spike7.addBox(0F, -4F, 0F, 1, 4, 1);
      spike7.setRotationPoint(-3.5F, 16F, -5F);
      spike7.setTextureSize(64, 32);
      spike7.mirror = true;
      setRotation(spike7, -0.8726646F, 0F, 0F);
      spike8 = new ModelRenderer(this, 60, 0);
      spike8.addBox(0F, -4F, 0F, 1, 4, 1);
      spike8.setRotationPoint(-3.5F, 16F, -1F);
      spike8.setTextureSize(64, 32);
      spike8.mirror = true;
      setRotation(spike8, -0.8726646F, 0F, 0F);
      spike9 = new ModelRenderer(this, 60, 0);
      spike9.addBox(0F, -4F, 0F, 1, 4, 1);
      spike9.setRotationPoint(-1.5F, 16F, -1F);
      spike9.setTextureSize(64, 32);
      spike9.mirror = true;
      setRotation(spike9, -0.8726646F, 0F, 0F);
      spike10 = new ModelRenderer(this, 60, 0);
      spike10.addBox(0F, -4F, 0F, 1, 4, 1);
      spike10.setRotationPoint(2.5F, 16F, -1F);
      spike10.setTextureSize(64, 32);
      spike10.mirror = true;
      setRotation(spike10, -0.8726646F, 0F, 0F);
      head = new ModelRenderer(this, 40, 0);
      head.addBox(-3F, -10F, -5F, 6, 6, 6);
      head.setRotationPoint(0F, 17F, -7F);
      head.setTextureSize(64, 32);
      head.mirror = true;
      setRotation(head, 0F, 0F, 0F);
      spike11 = new ModelRenderer(this, 60, 0);
      spike11.addBox(0F, -4F, 0F, 1, 4, 1);
      spike11.setRotationPoint(2.5F, 16F, -5F);
      spike11.setTextureSize(64, 32);
      spike11.mirror = true;
      setRotation(spike11, -0.8726646F, 0F, 0F);
      spike12 = new ModelRenderer(this, 60, 0);
      spike12.addBox(0F, -4F, 0F, 1, 4, 1);
      spike12.setRotationPoint(-0.5F, 16F, 1F);
      spike12.setTextureSize(64, 32);
      spike12.mirror = true;
      setRotation(spike12, -0.8726646F, 0F, 0F);
      spike13 = new ModelRenderer(this, 60, 0);
      spike13.addBox(0F, -4F, 0F, 1, 4, 1);
      spike13.setRotationPoint(1.5F, 16F, 1F);
      spike13.setTextureSize(64, 32);
      spike13.mirror = true;
      setRotation(spike13, -0.8726646F, 0F, 0F);
      spike14 = new ModelRenderer(this, 60, 0);
      spike14.addBox(0F, -4F, 0F, 1, 4, 1);
      spike14.setRotationPoint(-2.5F, 16F, 1F);
      spike14.setTextureSize(64, 32);
      spike14.mirror = true;
      setRotation(spike14, -0.8726646F, 0F, 0F);
      spike15 = new ModelRenderer(this, 60, 0);
      spike15.addBox(0F, -4F, 0F, 1, 4, 1);
      spike15.setRotationPoint(0.5F, 16F, 3F);
      spike15.setTextureSize(64, 32);
      spike15.mirror = true;
      setRotation(spike15, -0.8726646F, 0F, 0F);
      spike16 = new ModelRenderer(this, 60, 0);
      spike16.addBox(0F, -4F, 0F, 1, 4, 1);
      spike16.setRotationPoint(-1.5F, 16F, 3F);
      spike16.setTextureSize(64, 32);
      spike16.mirror = true;
      setRotation(spike16, -0.8726646F, 0F, 0F);
      spike17 = new ModelRenderer(this, 60, 0);
      spike17.addBox(0F, -4F, 0F, 1, 4, 1);
      spike17.setRotationPoint(-3.5F, 16F, 3F);
      spike17.setTextureSize(64, 32);
      spike17.mirror = true;
      setRotation(spike17, -0.8726646F, 0F, 0F);
      spike18 = new ModelRenderer(this, 60, 0);
      spike18.addBox(0F, -4F, 0F, 1, 4, 1);
      spike18.setRotationPoint(2.5F, 16F, 3F);
      spike18.setTextureSize(64, 32);
      spike18.mirror = true;
      setRotation(spike18, -0.8726646F, 0F, 0F);
      tooth1 = new ModelRenderer(this, 0, 3);
      tooth1.addBox(0F, 0F, 0F, 1, 1, 1);
      tooth1.setRotationPoint(1F, 13F, -12F);
      tooth1.setTextureSize(64, 32);
      tooth1.mirror = true;
      setRotation(tooth1, 0F, 0F, 0F);
      tooth2 = new ModelRenderer(this, 0, 3);
      tooth2.addBox(0F, 0F, 0F, 1, 1, 1);
      tooth2.setRotationPoint(-2F, 13F, -12F);
      tooth2.setTextureSize(64, 32);
      tooth2.mirror = true;
      setRotation(tooth2, 0F, 0F, 0F);
      tooth3 = new ModelRenderer(this, 0, 3);
      tooth3.addBox(0F, 0F, 0F, 1, 1, 1);
      tooth3.setRotationPoint(2F, 13F, -10F);
      tooth3.setTextureSize(64, 32);
      tooth3.mirror = true;
      setRotation(tooth3, 0F, 0F, 0F);
      tooth4 = new ModelRenderer(this, 0, 3);
      tooth4.addBox(0F, 0F, 0F, 1, 1, 1);
      tooth4.setRotationPoint(-3F, 13F, -10F);
      tooth4.setTextureSize(64, 32);
      tooth4.mirror = true;
      setRotation(tooth4, 0F, 0F, 0F);
      spike19 = new ModelRenderer(this, 60, 0);
      spike19.addBox(0F, -4F, 0F, 1, 4, 1);
      spike19.setRotationPoint(-0.5F, 16F, 5F);
      spike19.setTextureSize(64, 32);
      spike19.mirror = true;
      setRotation(spike19, -0.8726646F, 0F, 0F);
      spike20 = new ModelRenderer(this, 60, 0);
      spike20.addBox(0F, -4F, 0F, 1, 4, 1);
      spike20.setRotationPoint(1.5F, 16F, 5F);
      spike20.setTextureSize(64, 32);
      spike20.mirror = true;
      setRotation(spike20, -0.8726646F, 0F, 0F);
      spike21 = new ModelRenderer(this, 60, 0);
      spike21.addBox(0F, -4F, 0F, 1, 4, 1);
      spike21.setRotationPoint(-2.5F, 16F, 5F);
      spike21.setTextureSize(64, 32);
      spike21.mirror = true;
      setRotation(spike21, -0.8726646F, 0F, 0F);
      side1 = new ModelRenderer(this, 14, 0);
      side1.addBox(0F, 0F, 0F, 1, 2, 5);
      side1.setRotationPoint(-4F, 17F, -5F);
      side1.setTextureSize(64, 32);
      side1.mirror = true;
      setRotation(side1, 0F, -0.5235988F, 0F);
      side2 = new ModelRenderer(this, 14, 0);
      side2.addBox(0F, 0F, 0F, 1, 2, 5);
      side2.setRotationPoint(-4F, 17F, -2F);
      side2.setTextureSize(64, 32);
      side2.mirror = true;
      setRotation(side2, 0F, -0.5235988F, 0F);
      side3 = new ModelRenderer(this, 14, 0);
      side3.addBox(0F, 0F, 0F, 1, 2, 5);
      side3.setRotationPoint(-4F, 17F, 1F);
      side3.setTextureSize(64, 32);
      side3.mirror = true;
      setRotation(side3, 0F, -0.5235988F, 0F);
      side4 = new ModelRenderer(this, 14, 0);
      side4.addBox(0F, 0F, 0F, 1, 2, 5);
      side4.setRotationPoint(-4F, 17F, 4F);
      side4.setTextureSize(64, 32);
      side4.mirror = true;
      setRotation(side4, 0F, -0.5235988F, 0F);
      side5 = new ModelRenderer(this, 14, 0);
      side5.addBox(-1F, 0F, 0F, 1, 2, 5);
      side5.setRotationPoint(4F, 17F, -5F);
      side5.setTextureSize(64, 32);
      side5.mirror = true;
      setRotation(side5, 0F, 0.5235988F, 0F);
      side6 = new ModelRenderer(this, 14, 0);
      side6.addBox(-1F, 0F, 0F, 1, 2, 5);
      side6.setRotationPoint(4F, 17F, -2F);
      side6.setTextureSize(64, 32);
      side6.mirror = true;
      setRotation(side6, 0F, 0.5235988F, 0F);
      side7 = new ModelRenderer(this, 14, 0);
      side7.addBox(-1F, 0F, 0F, 1, 2, 5);
      side7.setRotationPoint(4F, 17F, 1F);
      side7.setTextureSize(64, 32);
      side7.mirror = true;
      setRotation(side7, 0F, 0.5235988F, 0F);
      side8 = new ModelRenderer(this, 14, 0);
      side8.addBox(-1F, 0F, 0F, 1, 2, 5);
      side8.setRotationPoint(4F, 17F, 4F);
      side8.setTextureSize(64, 32);
      side8.mirror = true;
      setRotation(side8, 0F, 0.5235988F, 0F);
      tail1 = new ModelRenderer(this, 14, 0);
      tail1.addBox(-1F, 0F, 0F, 1, 2, 5);
      tail1.setRotationPoint(-2F, 17F, 7F);
      tail1.setTextureSize(64, 32);
      tail1.mirror = true;
      setRotation(tail1, 0F, 0.2617994F, 0F);
      tail2 = new ModelRenderer(this, 14, 0);
      tail2.addBox(0F, 0F, 0F, 1, 2, 5);
      tail2.setRotationPoint(2F, 17F, 7F);
      tail2.setTextureSize(64, 32);
      tail2.mirror = true;
      setRotation(tail2, 0F, -0.2617994F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    leg1.render(f5);
    foot1.render(f5);
    leg2.render(f5);
    foot2.render(f5);
    foot3.render(f5);
    leg3.render(f5);
    leg4.render(f5);
    foot4.render(f5);
    body.render(f5);
    neck.render(f5);
    spike1.render(f5);
    spike2.render(f5);
    spike3.render(f5);
    spike4.render(f5);
    spike5.render(f5);
    spike6.render(f5);
    spike7.render(f5);
    spike8.render(f5);
    spike9.render(f5);
    spike10.render(f5);
    head.render(f5);
    spike11.render(f5);
    spike12.render(f5);
    spike13.render(f5);
    spike14.render(f5);
    spike15.render(f5);
    spike16.render(f5);
    spike17.render(f5);
    spike18.render(f5);
    tooth1.render(f5);
    tooth2.render(f5);
    tooth3.render(f5);
    tooth4.render(f5);
    spike19.render(f5);
    spike20.render(f5);
    spike21.render(f5);
    side1.render(f5);
    side2.render(f5);
    side3.render(f5);
    side4.render(f5);
    side5.render(f5);
    side6.render(f5);
    side7.render(f5);
    side8.render(f5);
    tail1.render(f5);
    tail2.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z) {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity) {
    super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    this.leg1.rotateAngleX = this.leg4.rotateAngleX = this.foot1.rotateAngleX = this.foot4.rotateAngleX = (float) Math.sin(f/2)*f1*1.3f;
    this.leg2.rotateAngleX = this.leg3.rotateAngleX = this.foot2.rotateAngleX = this.foot3.rotateAngleX = (float) Math.cos(f/2)*f1*1.3f;
  }

}
