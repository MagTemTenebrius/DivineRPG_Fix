package net.divinerpg.client.render.entity.vethea.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class Herbomancer extends ModelBase
{
    //fields
    ModelRenderer head1;
    ModelRenderer rightarm1;
    ModelRenderer leftarm1;
    ModelRenderer rightleg1;
    ModelRenderer leftleg6;
    ModelRenderer head2;
    ModelRenderer head3;
    ModelRenderer head4;
    ModelRenderer head5;
    ModelRenderer head6;
    ModelRenderer head7;
    ModelRenderer head8;
    ModelRenderer head9;
    ModelRenderer head10;
    ModelRenderer head11;
    ModelRenderer head12;
    ModelRenderer body2;
    ModelRenderer body3;
    ModelRenderer body4;
    ModelRenderer body5;
    ModelRenderer body6;
    ModelRenderer body7;
    ModelRenderer body8;
    ModelRenderer body9;
    ModelRenderer body10;
    ModelRenderer body11;
    ModelRenderer body12;
    ModelRenderer body13;
    ModelRenderer body14;
    ModelRenderer body15;
    ModelRenderer body16;
    ModelRenderer body17;
    ModelRenderer body18;
    ModelRenderer body19;
    ModelRenderer body20;
    ModelRenderer body21;
    ModelRenderer body22;
    ModelRenderer body23;
    ModelRenderer body24;
    ModelRenderer body25;
    ModelRenderer body26;
    ModelRenderer body27;
    ModelRenderer body28;
    ModelRenderer body29;
    ModelRenderer body30;
    ModelRenderer body31;
    ModelRenderer leftarm2;
    ModelRenderer rightarm2;
    ModelRenderer leftarm3;
    ModelRenderer rightarm3;
    ModelRenderer leftarm4;
    ModelRenderer rightarm4;
    ModelRenderer rightarm5;
    ModelRenderer leftarm5;
    ModelRenderer rightarm6;
    ModelRenderer leftarm6;
    ModelRenderer leftarm7;
    ModelRenderer rightarm7;
    ModelRenderer leftarm8;
    ModelRenderer rightarm8;
    ModelRenderer rightarm9;
    ModelRenderer rightarm10;
    ModelRenderer leftarm9;
    ModelRenderer leftarm10;
    ModelRenderer leftleg2;
    ModelRenderer rightleg2;
    ModelRenderer leftleg3;
    ModelRenderer rightleg3;
    ModelRenderer leftleg4;
    ModelRenderer rightleg5;
    ModelRenderer rightleg6;
    ModelRenderer leftarm11;
    ModelRenderer leftarm12;
    ModelRenderer leftarm13;
    ModelRenderer leftarm14;
    ModelRenderer leftleg5;

    public Herbomancer()
    {
        textureWidth = 128;
        textureHeight = 32;

        head1 = new ModelRenderer(this, 7, 14);
        head1.addBox(-1F, -4F, -5F, 2, 1, 1);
        head1.setRotationPoint(0F, -6F, 0F);
        head1.setTextureSize(128, 32);
        head1.mirror = true;
        setRotation(head1, 0F, 0F, 0F);
        rightarm1 = new ModelRenderer(this, 82, 4);
        rightarm1.addBox(0F, -2F, -2F, 1, 12, 1);
        rightarm1.setRotationPoint(-14F, -3F, 0F);
        rightarm1.setTextureSize(128, 32);
        rightarm1.mirror = true;
        setRotation(rightarm1, 0F, 0F, 0F);
        leftarm1 = new ModelRenderer(this, 82, 4);
        leftarm1.addBox(-1F, -2F, -2F, 1, 12, 1);
        leftarm1.setRotationPoint(9F, -3F, 0F);
        leftarm1.setTextureSize(128, 32);
        leftarm1.mirror = true;
        setRotation(leftarm1, 0F, 0F, 0F);
        rightleg1 = new ModelRenderer(this, 74, 3);
        rightleg1.addBox(1F, 0F, 2F, 1, 12, 1);
        rightleg1.setRotationPoint(-4F, 12F, 0F);
        rightleg1.setTextureSize(128, 32);
        rightleg1.mirror = true;
        setRotation(rightleg1, 0F, 0F, 0F);
        leftleg6 = new ModelRenderer(this, 74, 3);
        leftleg6.addBox(-2F, 0F, 2F, 1, 12, 1);
        leftleg6.setRotationPoint(4F, 12F, 0F);
        leftleg6.setTextureSize(128, 32);
        leftleg6.mirror = true;
        setRotation(leftleg6, 0F, 0F, 0F);
        head2 = new ModelRenderer(this, 0, 5);
        head2.addBox(-4F, -3F, -4F, 1, 3, 8);
        head2.setRotationPoint(0F, -6F, 0F);
        head2.setTextureSize(128, 32);
        head2.mirror = true;
        setRotation(head2, 0F, 0F, 0F);
        head3 = new ModelRenderer(this, 7, 6);
        head3.addBox(-4F, -8F, -5F, 8, 4, 1);
        head3.setRotationPoint(0F, -6F, 0F);
        head3.setTextureSize(128, 32);
        head3.mirror = true;
        setRotation(head3, 0F, 0F, 0F);
        head4 = new ModelRenderer(this, 7, 12);
        head4.addBox(-4F, -3F, -5F, 8, 3, 1);
        head4.setRotationPoint(0F, -6F, 0F);
        head4.setTextureSize(128, 32);
        head4.mirror = true;
        setRotation(head4, 0F, 0F, 0F);
        head5 = new ModelRenderer(this, 7, 12);
        head5.addBox(-4F, -4F, -5F, 1, 1, 1);
        head5.setRotationPoint(0F, -6F, 0F);
        head5.setTextureSize(128, 32);
        head5.mirror = true;
        setRotation(head5, 0F, 0F, 0F);
        head6 = new ModelRenderer(this, 7, 12);
        head6.addBox(3F, -4F, -5F, 1, 1, 1);
        head6.setRotationPoint(0F, -6F, 0F);
        head6.setTextureSize(128, 32);
        head6.mirror = true;
        setRotation(head6, 0F, 0F, 0F);
        head7 = new ModelRenderer(this, 1, 0);
        head7.addBox(-3F, -8F, -4F, 6, 8, 8);
        head7.setRotationPoint(0F, -6F, 0F);
        head7.setTextureSize(128, 32);
        head7.mirror = true;
        setRotation(head7, 0F, 0F, 0F);
        head8 = new ModelRenderer(this, 0, 0);
        head8.addBox(-4F, -8F, -4F, 1, 3, 8);
        head8.setRotationPoint(0F, -6F, 0F);
        head8.setTextureSize(128, 32);
        head8.mirror = true;
        setRotation(head8, 0F, 0F, 0F);
        head9 = new ModelRenderer(this, 6, 0);
        head9.addBox(3F, -8F, -4F, 1, 3, 8);
        head9.setRotationPoint(0F, -6F, 0F);
        head9.setTextureSize(128, 32);
        head9.mirror = true;
        setRotation(head9, 0F, 0F, 0F);
        head10 = new ModelRenderer(this, 9, 2);
        head10.addBox(-4F, -5F, 2F, 1, 2, 2);
        head10.setRotationPoint(0F, -6F, 0F);
        head10.setTextureSize(128, 32);
        head10.mirror = true;
        setRotation(head10, 0F, 0F, 0F);
        head11 = new ModelRenderer(this, 6, 5);
        head11.addBox(3F, -3F, -4F, 1, 3, 8);
        head11.setRotationPoint(0F, -6F, 0F);
        head11.setTextureSize(128, 32);
        head11.mirror = true;
        setRotation(head11, 0F, 0F, 0F);
        head12 = new ModelRenderer(this, 6, 4);
        head12.addBox(3F, -5F, 2F, 1, 2, 2);
        head12.setRotationPoint(0F, -6F, 0F);
        head12.setTextureSize(128, 32);
        head12.mirror = true;
        setRotation(head12, 0F, 0F, 0F);
        body2 = new ModelRenderer(this, 16, 16);
        body2.addBox(-4F, 5F, -2F, 7, 2, 4);
        body2.setRotationPoint(4F, -11F, 0F);
        body2.setTextureSize(128, 32);
        body2.mirror = true;
        setRotation(body2, 0F, 0F, 0F);
        body2.mirror = false;
        body3 = new ModelRenderer(this, 16, 16);
        body3.addBox(-4F, 5F, -2F, 7, 2, 4);
        body3.setRotationPoint(-3F, -11F, 0F);
        body3.setTextureSize(128, 32);
        body3.mirror = true;
        setRotation(body3, 0F, 0F, 0F);
        body4 = new ModelRenderer(this, 104, 6);
        body4.addBox(-4F, 4F, -2F, 1, 8, 1);
        body4.setRotationPoint(3F, 0F, 4F);
        body4.setTextureSize(128, 32);
        body4.mirror = true;
        setRotation(body4, 0F, 0F, 0F);
        body4.mirror = false;
        body5 = new ModelRenderer(this, 104, 6);
        body5.addBox(-4F, 4F, -2F, 1, 8, 1);
        body5.setRotationPoint(10F, 0F, 4F);
        body5.setTextureSize(128, 32);
        body5.mirror = true;
        setRotation(body5, 0F, 0F, 0F);
        body6 = new ModelRenderer(this, 103, 6);
        body6.addBox(-4F, 4F, -2F, 1, 8, 1);
        body6.setRotationPoint(3F, -8F, 4F);
        body6.setTextureSize(128, 32);
        body6.mirror = true;
        setRotation(body6, 0F, 0F, 0F);
        body7 = new ModelRenderer(this, 104, 6);
        body7.addBox(-4F, 4F, -2F, 1, 8, 1);
        body7.setRotationPoint(10F, -8F, 4F);
        body7.setTextureSize(128, 32);
        body7.mirror = true;
        setRotation(body7, 0F, 0F, 0F);
        body8 = new ModelRenderer(this, 16, 20);
        body8.addBox(-4F, 4F, -2F, 7, 8, 4);
        body8.setRotationPoint(-3F, -8F, 0F);
        body8.setTextureSize(128, 32);
        body8.mirror = true;
        setRotation(body8, 0F, 0F, 0F);
        body9 = new ModelRenderer(this, 89, 13);
        body9.addBox(-3F, 4F, -3F, 5, 2, 1);
        body9.setRotationPoint(-3F, 6F, 5F);
        body9.setTextureSize(128, 32);
        body9.mirror = true;
        setRotation(body9, 0F, 0F, 0F);
        body10 = new ModelRenderer(this, 16, 20);
        body10.addBox(-4F, 4F, -2F, 7, 8, 4);
        body10.setRotationPoint(4F, 0F, 0F);
        body10.setTextureSize(128, 32);
        body10.mirror = true;
        setRotation(body10, 0F, 0F, 0F);
        body10.mirror = false;
        body11 = new ModelRenderer(this, 16, 20);
        body11.addBox(-4F, 4F, -2F, 7, 8, 4);
        body11.setRotationPoint(-3F, 0F, 0F);
        body11.setTextureSize(128, 32);
        body11.mirror = true;
        setRotation(body11, 0F, 0F, 0F);
        body12 = new ModelRenderer(this, 104, 6);
        body12.addBox(-4F, 4F, -2F, 1, 8, 1);
        body12.setRotationPoint(4F, 0F, 4F);
        body12.setTextureSize(128, 32);
        body12.mirror = true;
        setRotation(body12, 0F, 0F, 0F);
        body13 = new ModelRenderer(this, 104, 6);
        body13.addBox(-4F, 4F, -2F, 1, 8, 1);
        body13.setRotationPoint(4F, -8F, 4F);
        body13.setTextureSize(128, 32);
        body13.mirror = true;
        setRotation(body13, 0F, 0F, 0F);
        body14 = new ModelRenderer(this, 104, 6);
        body14.addBox(-4F, 4F, -2F, 1, 8, 1);
        body14.setRotationPoint(-3F, 0F, 4F);
        body14.setTextureSize(128, 32);
        body14.mirror = true;
        setRotation(body14, 0F, 0F, 0F);
        body15 = new ModelRenderer(this, 104, 6);
        body15.addBox(-4F, 4F, -2F, 1, 8, 1);
        body15.setRotationPoint(-3F, -8F, 4F);
        body15.setTextureSize(128, 32);
        body15.mirror = true;
        setRotation(body15, 0F, 0F, 0F);
        body16 = new ModelRenderer(this, 16, 20);
        body16.addBox(-4F, 4F, -2F, 7, 8, 4);
        body16.setRotationPoint(4F, -8F, 0F);
        body16.setTextureSize(128, 32);
        body16.mirror = true;
        setRotation(body16, 0F, 0F, 0F);
        body17 = new ModelRenderer(this, 89, 13);
        body17.addBox(-3F, 4F, -3F, 5, 2, 1);
        body17.setRotationPoint(4F, 6F, 5F);
        body17.setTextureSize(128, 32);
        body17.mirror = true;
        setRotation(body17, 0F, 0F, 0F);
        body17.mirror = false;
        body18 = new ModelRenderer(this, 57, 22);
        body18.addBox(-4F, 4F, -3F, 7, 2, 1);
        body18.setRotationPoint(4F, -10F, 5F);
        body18.setTextureSize(128, 32);
        body18.mirror = true;
        setRotation(body18, 0F, 0F, 0F);
        body19 = new ModelRenderer(this, 57, 22);
        body19.addBox(-4F, 4F, -3F, 7, 2, 1);
        body19.setRotationPoint(-3F, -10F, 5F);
        body19.setTextureSize(128, 32);
        body19.mirror = true;
        setRotation(body19, 0F, 0F, 0F);
        body20 = new ModelRenderer(this, 104, 6);
        body20.addBox(-4F, 4F, -2F, 1, 8, 1);
        body20.setRotationPoint(3F, 0F, -1F);
        body20.setTextureSize(128, 32);
        body20.mirror = true;
        setRotation(body20, 0F, 0F, 0F);
        body21 = new ModelRenderer(this, 104, 6);
        body21.addBox(-4F, 4F, -2F, 1, 8, 1);
        body21.setRotationPoint(-3F, 0F, -1F);
        body21.setTextureSize(128, 32);
        body21.mirror = true;
        setRotation(body21, 0F, 0F, 0F);
        body22 = new ModelRenderer(this, 104, 6);
        body22.addBox(-4F, 4F, -2F, 1, 8, 1);
        body22.setRotationPoint(-3F, -8F, -1F);
        body22.setTextureSize(128, 32);
        body22.mirror = true;
        setRotation(body22, 0F, 0F, 0F);
        body23 = new ModelRenderer(this, 89, 13);
        body23.addBox(-3F, 4F, -3F, 5, 2, 1);
        body23.setRotationPoint(-3F, 6F, 0F);
        body23.setTextureSize(128, 32);
        body23.mirror = true;
        setRotation(body23, 0F, 0F, 0F);
        body24 = new ModelRenderer(this, 104, 6);
        body24.addBox(-4F, 4F, -2F, 1, 8, 1);
        body24.setRotationPoint(10F, 0F, -1F);
        body24.setTextureSize(128, 32);
        body24.mirror = true;
        setRotation(body24, 0F, 0F, 0F);
        body25 = new ModelRenderer(this, 89, 13);
        body25.addBox(-3F, 4F, -3F, 5, 2, 1);
        body25.setRotationPoint(4F, 6F, 0F);
        body25.setTextureSize(128, 32);
        body25.mirror = true;
        setRotation(body25, 0F, 0F, 0F);
        body26 = new ModelRenderer(this, 104, 6);
        body26.addBox(-4F, 4F, -2F, 1, 8, 1);
        body26.setRotationPoint(4F, 0F, -1F);
        body26.setTextureSize(128, 32);
        body26.mirror = true;
        setRotation(body26, 0F, 0F, 0F);
        body27 = new ModelRenderer(this, 104, 6);
        body27.addBox(-4F, 4F, -2F, 1, 8, 1);
        body27.setRotationPoint(10F, -8F, -1F);
        body27.setTextureSize(128, 32);
        body27.mirror = true;
        setRotation(body27, 0F, 0F, 0F);
        body28 = new ModelRenderer(this, 104, 6);
        body28.addBox(-4F, 4F, -2F, 1, 8, 1);
        body28.setRotationPoint(4F, -8F, -1F);
        body28.setTextureSize(128, 32);
        body28.mirror = true;
        setRotation(body28, 0F, 0F, 0F);
        body29 = new ModelRenderer(this, 104, 6);
        body29.addBox(-4F, 4F, -2F, 1, 8, 1);
        body29.setRotationPoint(3F, -8F, -1F);
        body29.setTextureSize(128, 32);
        body29.mirror = true;
        setRotation(body29, 0F, 0F, 0F);
        body30 = new ModelRenderer(this, 59, 22);
        body30.addBox(-4F, 4F, -3F, 7, 2, 1);
        body30.setRotationPoint(4F, -10F, 0F);
        body30.setTextureSize(128, 32);
        body30.mirror = true;
        setRotation(body30, 0F, 0F, 0F);
        body31 = new ModelRenderer(this, 59, 22);
        body31.addBox(-4F, 4F, -3F, 7, 2, 1);
        body31.setRotationPoint(-3F, -10F, 0F);
        body31.setTextureSize(128, 32);
        body31.mirror = true;
        setRotation(body31, 0F, 0F, 0F);
        leftarm2 = new ModelRenderer(this, 82, 19);
        leftarm2.addBox(-3F, -4F, -4F, 9, 4, 8);
        leftarm2.setRotationPoint(9F, -3F, 0F);
        leftarm2.setTextureSize(128, 32);
        leftarm2.mirror = true;
        setRotation(leftarm2, 0F, 0F, 0F);
        rightarm2 = new ModelRenderer(this, 82, 19);
        rightarm2.addBox(-6F, -4F, -4F, 9, 4, 8);
        rightarm2.setRotationPoint(-9F, -3F, 0F);
        rightarm2.setTextureSize(128, 32);
        rightarm2.mirror = true;
        setRotation(rightarm2, 0F, 0F, 0F);
        leftarm3 = new ModelRenderer(this, 82, 4);
        leftarm3.addBox(0F, -2F, 2F, 1, 12, 1);
        leftarm3.setRotationPoint(9F, -3F, 0F);
        leftarm3.setTextureSize(128, 32);
        leftarm3.mirror = true;
        setRotation(leftarm3, 0F, 0F, 0F);
        rightarm3 = new ModelRenderer(this, 82, 4);
        rightarm3.addBox(-3F, -2F, 2F, 1, 12, 1);
        rightarm3.setRotationPoint(-10F, -3F, 0F);
        rightarm3.setTextureSize(128, 32);
        rightarm3.mirror = true;
        setRotation(rightarm3, 0F, 0F, 0F);
        leftarm4 = new ModelRenderer(this, 82, 4);
        leftarm4.addBox(3F, -2F, -3F, 1, 12, 1);
        leftarm4.setRotationPoint(9F, -3F, 0F);
        leftarm4.setTextureSize(128, 32);
        leftarm4.mirror = true;
        setRotation(leftarm4, 0F, 0F, 0F);
        rightarm4 = new ModelRenderer(this, 82, 4);
        rightarm4.addBox(-1F, -2F, -3F, 1, 12, 1);
        rightarm4.setRotationPoint(-9F, -3F, 0F);
        rightarm4.setTextureSize(128, 32);
        rightarm4.mirror = true;
        setRotation(rightarm4, 0F, 0F, 0F);
        rightarm5 = new ModelRenderer(this, 82, 4);
        rightarm5.addBox(-4F, -2F, -3F, 1, 12, 1);
        rightarm5.setRotationPoint(-9F, -3F, 0F);
        rightarm5.setTextureSize(128, 32);
        rightarm5.mirror = true;
        setRotation(rightarm5, 0F, 0F, 0F);
        leftarm5 = new ModelRenderer(this, 82, 4);
        leftarm5.addBox(0F, -2F, -3F, 1, 12, 1);
        leftarm5.setRotationPoint(9F, -3F, 0F);
        leftarm5.setTextureSize(128, 32);
        leftarm5.mirror = true;
        setRotation(leftarm5, 0F, 0F, 0F);
        rightarm6 = new ModelRenderer(this, 40, 16);
        rightarm6.addBox(-4F, -2F, -2F, 4, 12, 4);
        rightarm6.setRotationPoint(-9F, -3F, 0F);
        rightarm6.setTextureSize(128, 32);
        rightarm6.mirror = true;
        setRotation(rightarm6, 0F, 0F, 0F);
        leftarm6 = new ModelRenderer(this, 118, 17);
        leftarm6.addBox(1F, 2F, -9F, 2, 13, 2);
        leftarm6.setRotationPoint(9F, -3F, 0F);
        leftarm6.setTextureSize(128, 32);
        leftarm6.mirror = true;
        setRotation(leftarm6, 1.396263F, 0F, 0F);
        leftarm7 = new ModelRenderer(this, 82, 4);
        leftarm7.addBox(3F, -2F, 2F, 1, 12, 1);
        leftarm7.setRotationPoint(9F, -3F, 0F);
        leftarm7.setTextureSize(128, 32);
        leftarm7.mirror = true;
        setRotation(leftarm7, 0F, 0F, 0F);
        rightarm7 = new ModelRenderer(this, 82, 4);
        rightarm7.addBox(0F, -2F, 2F, 1, 12, 1);
        rightarm7.setRotationPoint(-10F, -3F, 0F);
        rightarm7.setTextureSize(128, 32);
        rightarm7.mirror = true;
        setRotation(rightarm7, 0F, 0F, 0F);
        leftarm8 = new ModelRenderer(this, 82, 4);
        leftarm8.addBox(-1F, -2F, 1F, 1, 12, 1);
        leftarm8.setRotationPoint(9F, -3F, 0F);
        leftarm8.setTextureSize(128, 32);
        leftarm8.mirror = true;
        setRotation(leftarm8, 0F, 0F, 0F);
        rightarm8 = new ModelRenderer(this, 82, 4);
        rightarm8.addBox(0F, -2F, 1F, 1, 12, 1);
        rightarm8.setRotationPoint(-14F, -3F, 0F);
        rightarm8.setTextureSize(128, 32);
        rightarm8.mirror = true;
        setRotation(rightarm8, 0F, 0F, 0F);
        rightarm9 = new ModelRenderer(this, 82, 4);
        rightarm9.addBox(0F, -2F, 1F, 1, 12, 1);
        rightarm9.setRotationPoint(-9F, -3F, 0F);
        rightarm9.setTextureSize(128, 32);
        rightarm9.mirror = true;
        setRotation(rightarm9, 0F, 0F, 0F);
        rightarm10 = new ModelRenderer(this, 82, 4);
        rightarm10.addBox(0F, -2F, -2F, 1, 12, 1);
        rightarm10.setRotationPoint(-9F, -3F, 0F);
        rightarm10.setTextureSize(128, 32);
        rightarm10.mirror = true;
        setRotation(rightarm10, 0F, 0F, 0F);
        leftarm9 = new ModelRenderer(this, 82, 4);
        leftarm9.addBox(4F, -2F, 1F, 1, 12, 1);
        leftarm9.setRotationPoint(9F, -3F, 0F);
        leftarm9.setTextureSize(128, 32);
        leftarm9.mirror = true;
        setRotation(leftarm9, 0F, 0F, 0F);
        leftarm10 = new ModelRenderer(this, 82, 4);
        leftarm10.addBox(4F, -2F, -2F, 1, 12, 1);
        leftarm10.setRotationPoint(9F, -3F, 0F);
        leftarm10.setTextureSize(128, 32);
        leftarm10.mirror = true;
        setRotation(leftarm10, 0F, 0F, 0F);
        leftleg2 = new ModelRenderer(this, 0, 16);
        leftleg2.addBox(-2F, 0F, -2F, 4, 12, 4);
        leftleg2.setRotationPoint(4F, 12F, 0F);
        leftleg2.setTextureSize(128, 32);
        leftleg2.mirror = true;
        setRotation(leftleg2, 0F, 0F, 0F);
        rightleg2 = new ModelRenderer(this, 0, 16);
        rightleg2.addBox(-2F, 0F, -2F, 4, 12, 4);
        rightleg2.setRotationPoint(-4F, 12F, 0F);
        rightleg2.setTextureSize(128, 32);
        rightleg2.mirror = true;
        setRotation(rightleg2, 0F, 0F, 0F);
        leftleg3 = new ModelRenderer(this, 74, 3);
        leftleg3.addBox(-2F, 0F, -3F, 1, 12, 1);
        leftleg3.setRotationPoint(4F, 12F, 0F);
        leftleg3.setTextureSize(128, 32);
        leftleg3.mirror = true;
        setRotation(leftleg3, 0F, 0F, 0F);
        rightleg3 = new ModelRenderer(this, 74, 3);
        rightleg3.addBox(-2F, 0F, 2F, 1, 12, 1);
        rightleg3.setRotationPoint(-4F, 12F, 0F);
        rightleg3.setTextureSize(128, 32);
        rightleg3.mirror = true;
        setRotation(rightleg3, 0F, 0F, 0F);
        leftleg4 = new ModelRenderer(this, 74, 3);
        leftleg4.addBox(1F, 0F, -3F, 1, 12, 1);
        leftleg4.setRotationPoint(4F, 12F, 0F);
        leftleg4.setTextureSize(128, 32);
        leftleg4.mirror = true;
        setRotation(leftleg4, 0F, 0F, 0F);
        rightleg5 = new ModelRenderer(this, 74, 3);
        rightleg5.addBox(1F, 0F, -3F, 1, 12, 1);
        rightleg5.setRotationPoint(-4F, 12F, 0F);
        rightleg5.setTextureSize(128, 32);
        rightleg5.mirror = true;
        setRotation(rightleg5, 0F, 0F, 0F);
        rightleg6 = new ModelRenderer(this, 74, 3);
        rightleg6.addBox(-2F, 0F, -3F, 1, 12, 1);
        rightleg6.setRotationPoint(-4F, 12F, 0F);
        rightleg6.setTextureSize(128, 32);
        rightleg6.mirror = true;
        setRotation(rightleg6, 0F, 0F, 0F);
        leftarm11 = new ModelRenderer(this, 40, 16);
        leftarm11.addBox(0F, -2F, -2F, 4, 12, 4);
        leftarm11.setRotationPoint(9F, -3F, 0F);
        leftarm11.setTextureSize(128, 32);
        leftarm11.mirror = true;
        setRotation(leftarm11, 0F, 0F, 0F);
        leftarm12 = new ModelRenderer(this, 110, 5);
        leftarm12.addBox(0F, -20F, -10F, 4, 4, 4);
        leftarm12.setRotationPoint(9F, -3F, 0F);
        leftarm12.setTextureSize(128, 32);
        leftarm12.mirror = true;
        setRotation(leftarm12, 1.396263F, 0F, 0F);
        leftarm13 = new ModelRenderer(this, 118, 18);
        leftarm13.addBox(1F, -9F, -9F, 2, 13, 2);
        leftarm13.setRotationPoint(9F, -3F, 0F);
        leftarm13.setTextureSize(128, 32);
        leftarm13.mirror = true;
        setRotation(leftarm13, 1.396263F, 0F, 0F);
        leftarm14 = new ModelRenderer(this, 118, 18);
        leftarm14.addBox(1F, -19F, -9F, 2, 10, 2);
        leftarm14.setRotationPoint(9F, -3F, 0F);
        leftarm14.setTextureSize(128, 32);
        leftarm14.mirror = true;
        setRotation(leftarm14, 1.396263F, 0F, 0F);
        leftleg5 = new ModelRenderer(this, 74, 3);
        leftleg5.addBox(1F, 0F, 2F, 1, 12, 1);
        leftleg5.setRotationPoint(4F, 12F, 0F);
        leftleg5.setTextureSize(128, 32);
        leftleg5.mirror = true;
        setRotation(leftleg5, 0F, 0F, 0F);
    }

    @Override
    public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
    {
        super.render(entity, f, f1, f2, f3, f4, f5);
        setRotationAngles(f, f1, f2, f3, f4, f5);
        head1.render(f5);
        rightarm1.render(f5);
        leftarm1.render(f5);
        rightleg1.render(f5);
        leftleg6.render(f5);
        head2.render(f5);
        head3.render(f5);
        head4.render(f5);
        head5.render(f5);
        head6.render(f5);
        head7.render(f5);
        head8.render(f5);
        head9.render(f5);
        head10.render(f5);
        head11.render(f5);
        head12.render(f5);
        body2.render(f5);
        body3.render(f5);
        body4.render(f5);
        body5.render(f5);
        body6.render(f5);
        body7.render(f5);
        body8.render(f5);
        body9.render(f5);
        body10.render(f5);
        body11.render(f5);
        body12.render(f5);
        body13.render(f5);
        body14.render(f5);
        body15.render(f5);
        body16.render(f5);
        body17.render(f5);
        body18.render(f5);
        body19.render(f5);
        body20.render(f5);
        body21.render(f5);
        body22.render(f5);
        body23.render(f5);
        body24.render(f5);
        body25.render(f5);
        body26.render(f5);
        body27.render(f5);
        body28.render(f5);
        body29.render(f5);
        body30.render(f5);
        body31.render(f5);
        leftarm2.render(f5);
        rightarm2.render(f5);
        leftarm3.render(f5);
        rightarm3.render(f5);
        leftarm4.render(f5);
        rightarm4.render(f5);
        rightarm5.render(f5);
        leftarm5.render(f5);
        rightarm6.render(f5);
        leftarm6.render(f5);
        leftarm7.render(f5);
        rightarm7.render(f5);
        leftarm8.render(f5);
        rightarm8.render(f5);
        rightarm9.render(f5);
        rightarm10.render(f5);
        leftarm9.render(f5);
        leftarm10.render(f5);
        leftleg2.render(f5);
        rightleg2.render(f5);
        leftleg3.render(f5);
        rightleg3.render(f5);
        leftleg4.render(f5);
        rightleg5.render(f5);
        rightleg6.render(f5);
        leftarm11.render(f5);
        leftarm12.render(f5);
        leftarm13.render(f5);
        leftarm14.render(f5);
        leftleg5.render(f5);
    }

    private void setRotation(ModelRenderer model, float x, float y, float z)
    {
        model.rotateAngleX = x;
        model.rotateAngleY = y;
        model.rotateAngleZ = z;
    }

    public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5)
    {
        this.leftleg2.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
        this.leftleg3.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
        this.leftleg4.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
        this.leftleg5.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;
        this.leftleg6.rotateAngleX = MathHelper.cos(f * 0.6662F) * 1.4F * f1;

        this.rightleg1.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
        this.rightleg2.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
        this.rightleg3.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
        this.rightleg5.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;
        this.rightleg6.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 1.4F * f1;

        this.rightarm1.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 2.0F * f1 * 0.5F;
        this.rightarm2.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 2.0F * f1 * 0.5F;
        this.rightarm3.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 2.0F * f1 * 0.5F;
        this.rightarm4.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 2.0F * f1 * 0.5F;
        this.rightarm5.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 2.0F * f1 * 0.5F;
        this.rightarm6.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 2.0F * f1 * 0.5F;
        this.rightarm7.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 2.0F * f1 * 0.5F;
        this.rightarm8.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 2.0F * f1 * 0.5F;
        this.rightarm9.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 2.0F * f1 * 0.5F;
        this.rightarm10.rotateAngleX = MathHelper.cos(f * 0.6662F + (float)Math.PI) * 2.0F * f1 * 0.5F;

        this.leftarm1.rotateAngleX = MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5F;
        this.leftarm2.rotateAngleX = MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5F;
        this.leftarm3.rotateAngleX = MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5F;
        this.leftarm4.rotateAngleX = MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5F;
        this.leftarm5.rotateAngleX = MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5F;
        this.leftarm6.rotateAngleX = MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5F + 1.396263F;
        this.leftarm7.rotateAngleX = MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5F;
        this.leftarm8.rotateAngleX = MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5F;
        this.leftarm9.rotateAngleX = MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5F;
        this.leftarm10.rotateAngleX = MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5F;
        this.leftarm11.rotateAngleX = MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5F;
        this.leftarm12.rotateAngleX = MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5F + 1.396263F;
        this.leftarm13.rotateAngleX = MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5F + 1.396263F;
        this.leftarm14.rotateAngleX = MathHelper.cos(f * 0.6662F) * 2.0F * f1 * 0.5F + 1.396263F;
    }

}
